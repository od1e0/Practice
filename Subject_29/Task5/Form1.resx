<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxRocket.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>